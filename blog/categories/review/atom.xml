<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Review | More Muc Than You Can Handle]]></title>
  <link href="http://scottmuc.com/blog/categories/review/atom.xml" rel="self"/>
  <link href="http://scottmuc.com/"/>
  <updated>2014-10-17T13:44:41+05:30</updated>
  <id>http://scottmuc.com/</id>
  <author>
    <name><![CDATA[Scott Muc]]></name>
    <email><![CDATA[scottmuc@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Book Review - Learning Continuous Integration With TeamCity by Manoj Mahalingam]]></title>
    <link href="http://scottmuc.com/book-review-learning-continuous-integration-with-teamcity-by-manoj-mahalingam/"/>
    <updated>2014-10-13T17:34:30+05:30</updated>
    <id>http://scottmuc.com/book-review-learning-continuous-integration-with-teamcity-by-manoj-mahalingam</id>
    <content type="html"><![CDATA[<p><strong>Disclaimer</strong> &ndash; I personally know Manoj and have worked with him in the past. I was asked to review his book,
<a href="http://goo.gl/5wUy3v">Learning Continuous Integration with TeamCity</a>, by <a href="https://www.packtpub.com/">Packt Publishing</a>.</p>

<p><a href="http://goo.gl/5wUy3v"><img class="left" src="https://www.packtpub.com/sites/default/files/9518OT%5f0.jpg" width="200"></a>
As someone who had spent many years consulting around the benefits of CI and implementing build and release strategies,
I was interested in how the minutiae would be brought up in a book.</p>

<p>The book begins by going through the creation and configuration of a similar build process for 3 specific tech stacks:
Java, .Net, and Ruby. At first it feels rather repetitive but the repetition actually helps reinforce the importance of
consistency. With all tech stacks, the procedure is pretty much the same: <code>Checkout, Build, Test, Package, Deploy, Run
UI Tests</code>. This pattern really stands out after going through chapters 4, 5 and 6 and builds up a foundation for the
reader so that the rest of the material makes sense.</p>

<p>After setting the stage with these build configurations, he then dives into content that&rsquo;s a bit more TeamCity
specific. This area was much more interesting to me as I&rsquo;m already experienced with build and release concepts, but it
was nice to see TeamCity specific features explained in a little bit more depth.</p>

<p>One piece that felt a little out of place was the topic on Continuous Delivery. It&rsquo;s really hard to introduce a concept
that has a massive book dedicated to the subject. Not sure if its inclusion will help out the beginner that this book
appears to be targeting.</p>

<p>What I enjoyed the most was raising operational concerns around running a CI server system. It was likely
deliberately left out, but I would have liked to see a mention of automated configuration management. There&rsquo;s something
incredibly powerful around automation around your automation.</p>

<p>It became clear to me that this book is meant for the absolute beginner. Manoj hints at better ways of implementing
his example configurations (eg: using wrapper scripts over the built in runners) but doesn&rsquo;t distract the reader
with these possibly subjective tangents. I would recommend this book if you&rsquo;ve never worked with any CI tool and like
to have a guidebook as you try and set it up yourself. Despite being over 250 pages, the book is packed with
screenshots so that it&rsquo;s absolutely clear and won&rsquo;t take too long to go through the whole book. If you&rsquo;re already
experienced with some tools the principles around CI and good build hygiene, this book is useful to skim to see what&rsquo;s
new with TeamCity and some context of the usage of TeamCity specific features.</p>

<p>You can find more information about Manoj at his <a href="https://twitter.com/manojlds">twitter account</a>, on <a href="http://stackoverflow.com/users/526535/manojlds">stackoverflow</a>, or his
<a href="http://stacktoheap.com/">website</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review - the Art of Unit Testing by Roy Osherove]]></title>
    <link href="http://scottmuc.com/blog/reviews/book-review-the-art-of-unit-testing-by-roy-osherove/"/>
    <updated>2009-07-08T08:56:00+05:30</updated>
    <id>http://scottmuc.com/blog/reviews/book-review-the-art-of-unit-testing-by-roy-osherove</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://www.manning.com/osherove/osherove_cover150.jpg">http://www.manning.com/osherove/osherove_cover150.jpg</a>">
In a recent splurge I purchased 4 books from <a href="http://www.manning.com/">Manning Press</a> with one of them being <a href="http://www.manning.com/osherove/">The Art of Unit Testing</a> by <strong>Roy Osherove</strong>.</p>

<p>I would categorize myself as relatively new to unit testing. My first hands on testing was when I took the Nothing but .Net bootcamp with JP Boodhoo but he emphasized BDD style tests. I saw the benefit of BDD but didn&rsquo;t feel I had the know how to implement them properly. About 3 months ago I started writing tests in a more unit test like fashion and things started clicking.</p>

<p>This book felt like an Assertion of what I&rsquo;ve learned over the last year. As I read the book I kept finding stories I could relate to. In my attempts to apply unit testing to my own code, I experienced nearly everything Roy talks about in this book.</p>

<p><strong>Chapter 5</strong> was great a explaining the differences between the terms <a href="http://www.martinfowler.com/articles/mocksArentStubs.html">Stub and Mock</a>. What I liked was how he provided samples of manual stubs and mocks to give the reader a peak under the curtain as to what a mock (err faking, Roy&rsquo;s personal word preference) framework does for us. I can understand how the work mock is overloaded now, and can appreciate the proper terminology and it helps when explaining these concepts to others.</p>

<p>For me <strong>Chapters 6 and 7</strong> are where I got the most out of the book. Through all my reading of testing on-line, I found it quite simple because the scope of the demos were so small. I felt these two chapters armed me with some good principals on organizing tests and treating them just as important as my production code.</p>

<p>All in all this was one of the easiest programming books I&rsquo;ve ever read. Roy&rsquo;s tone was fun (especially his little jab at <a href="http://ayende.com/">Ayende</a>), but wasn&rsquo;t so opinionate that it sounded preachy. In fact I felt comfortable making my own opinions that extend his foundations. Roy presented the material in a way that seems like he assumes you&rsquo;re not an idiot. There wasn&rsquo;t a lot of &ldquo;hand holding&rdquo; which can be found in other entry level books. He provides ample resources for those that want more instruction on certain topics which creates a good pace for the reader.</p>

<p>As for the negatives: I wish it was a little longer. I don&rsquo;t know why, but I felt that there was more to say on a lot of topics. Perhaps more examples, which could seem a bit repatitive, but could be skipped by those who got the message. I also didn&rsquo;t like how <a href="http://typemock.com/">TypeMock</a> was being pushed heavily and the disclaimer that Roy worked for TypeMock didn&rsquo;t come in until near the end.</p>

<p>I would reccomend this book to anyone who is new to unit testing. I think I read the book at almost a perfect time. I knew enough that I could see past the trivial example to the message he&rsquo;s delivering, but not enough to skip all the material because it was so obvious. A seasoned unit tester might not get as much value from this book, but I would urge them to get it anyways so they can loan it to those they work with who are new to testing.</p>

<p>A great prelude to reading this book is to watch Roy review the test suites for the following projects:</p>

<p><a href="http://weblogs.asp.net/rosherove/archive/2009/03/20/test-review-1-nerddinner.aspx">Nerd Dinner</a> <br />
<a href="http://weblogs.asp.net/rosherove/archive/2009/03/21/test-review-2-asp-net-mvc-unit-tests.aspx">Asp.Net MVC</a> <br />
<a href="http://weblogs.asp.net/rosherove/archive/2009/03/23/test-review-3-unity.aspx">Microsoft Unity</a></p>

<p>Be warned, you&rsquo;ll be watching a grumpy Roy at 2am :&ndash;). Roy also has a <a href="http://osherove.com/blog">great blog</a> and is active on <a href="http://twitter.com/RoyOsherove">twitter</a> as well.</p>
]]></content>
  </entry>
  
</feed>
