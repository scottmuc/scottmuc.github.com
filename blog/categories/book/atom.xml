<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Book | More Muc Than You Can Handle]]></title>
  <link href="http://scottmuc.com/blog/categories/book/atom.xml" rel="self"/>
  <link href="http://scottmuc.com/"/>
  <updated>2014-11-13T11:36:03+05:30</updated>
  <id>http://scottmuc.com/</id>
  <author>
    <name><![CDATA[Scott Muc]]></name>
    <email><![CDATA[scottmuc@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Book Review - a Mind for Numbers by Barbara Oakley]]></title>
    <link href="http://scottmuc.com/book-review-a-mind-for-numbers-by-barbara-oakley/"/>
    <updated>2014-10-26T13:35:53+05:30</updated>
    <id>http://scottmuc.com/book-review-a-mind-for-numbers-by-barbara-oakley</id>
    <content type="html"><![CDATA[<p><a href="http://www.penguin.com/book/a-mind-for-numbers-by-barbara-oakley/9780399165245"><img class="left" src="/images/blog/l2l/book.jpg" width="200"></a>
Over the last 4 weeks I&rsquo;ve been taking the <a href="https://www.coursera.org/">Coursera</a> course <a href="https://www.coursera.org/course/learning">Learning how to Learn</a> on the
recommendation of my friend <a href="https://twitter.com/sragu">Srini</a>. The 2nd assignment in the course is to create a presentation or some
form of media to present an understanding of the topics. An accompaniment to the course is the book,
<a href="http://www.penguin.com/book/a-mind-for-numbers-by-barbara-oakley/9780399165245">A Mind for Numbers</a> by <a href="http://www.barbaraoakley.com/">Barbara Oakley</a> (the primary course instructor), which is a short read but very
insightful and full of references. I&rsquo;m thoroughly enjoying the course and love the concept around the assignment. This
blog is my way of trying to synthesize ideas that are flying around in my head, which is exactly the purpose of the
assignment.</p>

<p>Over my education and career, I feel that I have developed some pretty good habits. The book has confirmed some of these
habits and given me an understanding around why they work. It&rsquo;s also able to point out some flaws that I tend to
down-play, but now realize that they are habits I need to deal with.</p>

<h2>Core Concepts</h2>

<p>The material in the book (and the course) were broken up into easy to consume chunks (see what I did there?).
I can&rsquo;t really cover all of it here but these are the 3 concepts that really stuck with me.</p>

<h3>Chunking</h3>

<p>Chunks can be thought of as an abstraction around a collection of specific thoughts. When I speak to another developer
and I say that this code <em>makes a web request</em>, that is a chunk of knowledge that I&rsquo;ve developed. I could break that
phrase down and say: establish a TCP connection with the remote server, using the HTTP protocol send a GET request
message, the server will receive this and route it to an appropriate controller, the application code will send an HTTP
response, the client will take the results and render the HTML to the browser. Woah, that was a lot of detail, and
that&rsquo;s one example of why it&rsquo;s important to chunk knowledge.</p>

<p><a href="/images/blog/l2l/chunking.png"><img class="center" src="/images/blog/l2l/chunking.png" title="&ldquo;chunking&rdquo;" ></a></p>

<p>It wasn&rsquo;t mentioned in the book, but a lot of what I read on chunking looked like reaching the <strong>competent</strong> level on the
<a href="https://en.wikipedia.org/wiki/Dreyfus_model_of_skill_acquisition">Dreyfus Model of Skill Acquisition</a>. I&rsquo;m now curious if <strong>diffuse mode</strong> is an essential part of
becoming <strong>proficent</strong> or an <strong>expert</strong> in a particular topic.</p>

<p>This section of the book has made me realize some flaws in the way I learn and I feel I fall into the trap called
<strong>illusion of competence</strong>. This can be caused by <a href="http://blog.coursera.org/post/93424900982/learning-how-not-to-learn">poor learning practices</a> (below), and I know I am guilty of many of
these. Speaking of the Dreyfus model, <strong>Erik Dietrich</strong> wrote an article about the <a href="http://www.daedtech.com/how-developers-stop-learning-rise-of-the-expert-beginner">Advanced Beginner</a>,
which is another great way of explaining the <strong>illusion of competence</strong>.</p>

<p><blockquote><p>* Passive rereading<br/>* Letting highlights overwhelm you<br/>* Merely glancing at a problem&rsquo;s solution and thinking you know how to do it<br/>* Waiting until the last minute to study<br/>* Repeatedly solving problems of the same type that you already know how to solve<br/>* Letting study sessions with friends turn into chat sessions<br/>* Neglecting to read the textbook before you start working problems<br/>* Not checking with your instructors or classmates to clear up points of confusion<br/>* Thinking you can learn deeply when you are being constantly distracted<br/>* Not getting enough sleep</p><footer><strong>Barbara Oakley <a href="http://blog.coursera.org/post/93424900982/learning-how-not-to-learn">http://blog.coursera.org/post/93424900982/learning-how-not-to-learn</a> Learning How (Not) To Learn</strong></footer></blockquote></p>

<p>I&rsquo;ve been lucky to accidentally avoid some of these habits. As a computer savvy person for the last 25 years, I still
prefer taking my notes on paper. I&rsquo;ve always stressed sleep too. I&rsquo;m definitely guilty of passive rereading, but I&rsquo;m
getting much better now. Solving similar problems is another one I need to catch myself doing.</p>

<h3>Diffuse and Focused Modes of Thinking</h3>

<p><strong>Focused Mode</strong> &ndash; When the brain is in this mode, it&rsquo;s busy building up foundations of material for access later. I
like to think of it as going to the gym. You&rsquo;re exercising ideas and building up their strength. If you don&rsquo;t practice
them deliberately, they can lose strength. If you don&rsquo;t focus on concepts with discipline, you don&rsquo;t effectively
chunk the concepts. When you get up from your task and realize that a lot more time has gone by than you had expected,
then you know you&rsquo;ve been in the focused mode.</p>

<p><strong>Diffuse Mode</strong> &ndash; This is where synthesis of multiple ideas (or chunks) happens. Our brain is good at continuing effort, solving
problems, while our bodies are performing activities like going for a walk, running, socializing, and cooking. This is
why when struggling with a problem late at night, sleeping on it, usually results in some new insights in the morning.
You know when you have yesterdays problem figured out in the morning during your shower? That&rsquo;s the diffuse mode kicking in.
Using the workout analogy, this is like using your in-shape body to enjoy life: traveling, playing with your children,
fixing up your garden.</p>

<p><img class="left" src="/images/blog/l2l/diffuse-focused.jpg" width="400" title="&ldquo;diffuse vs focused mode&rdquo;" >
What&rsquo;s important to understand is that both of these modes can&rsquo;t operate at the same time. I <a href="http://scottmuc.com/going-against-the-flow/">even wrote</a>
about this a while ago and this book has given me the knowledge to better understand what I was observing when I wrote
that post. As a developer, the state of flow (deep focused mode) has its appeal, but breaking that up so that you can
piece together your new knowledge is equally important.</p>

<p>Sometimes you&rsquo;ll hear someone say that they are a great multi-tasker. This usually results in an inability to focus!
If someone is a multi-tasker, then they are taking time away from the <strong>focused mode</strong> of operating, and thus fall into
the many ways <a href="http://blog.coursera.org/post/93424900982/learning-how-not-to-learn">not to learn</a>.</p>

<h3>Procrastination and Habits</h3>

<p>The topic of procrastination was very informative. The explanation of how dopamine effects long term beneficial actions
(<a href="http://www.psychologytoday.com/blog/intrinsic-motivation-and-magical-unicorns/201206/procrastination-and-dopamine-receptor-density">reference</a>) is insightful and can be used to influence how we develop habits. The book is full of
ideas on how prevent procrastination and here&rsquo;s my list of tactics:</p>

<ul>
<li><strong>Zero Notifications</strong> &ndash; this is an easy one for me as I already try to live a notification free life. My phone is
almost always on silent unless I&rsquo;m <em>expecting</em> a call or message. All my applications on my phone and computer have
notifications turned off. It&rsquo;s very hard to think of any reason why any notification would need immediate action.</li>
<li><strong><a href="http://pomodorotechnique.com/">Pomodoro Technique</a></strong> &ndash; I&rsquo;ve been a fan of this process for a long time. Procrastination doesn&rsquo;t stand
a chance when the timer is on. I like to use <a href="http://lifehacker.com/pomodoro-one-is-a-free-lightweight-pomodoro-timer-for-1626504270">pomodoro one</a> on my laptop. There are 4 components of
developing a habit, and the first one is the <strong>cue</strong>. Starting the timer triggers me to go into a focused mode.
<a href="/images/blog/l2l/self-control.png"><img class="right" src="/images/blog/l2l/self-control.png" width="300"></a></li>
<li><strong><a href="http://selfcontrolapp.com/">Self Control</a></strong> (pictured) &ndash; This application does a machine level block of the hostnames that you specify for a
specific time period. It runs outside of the web-browser so it&rsquo;ll block applications that talk to these services and
even killing the process or rebooting your machine won&rsquo;t get the hostname working again. I will use this every time
I&rsquo;m doing a pomodoro.</li>
<li><strong>Process over Product</strong> &ndash; Unless the task is very very small, the time allocated to a single pomodoro should be
process based. As of right now, I have on my task list the following: &ldquo;2 pomodoros of coursera project&rdquo;. This keeps
the focus on the activity and now the anxiety around the outcome. I don&rsquo;t know how long it&rsquo;s going to take to complete
this post, but I know if I chip away at it with time-boxes of focus it&rsquo;ll be completed before I know it.</li>
</ul>


<p>I like reading about other people&rsquo;s techniques and thought <a href="http://jamesclear.com/">James Clear</a> has a good
<a href="http://jamesclear.com/multipliers">blog post</a> and a good list. On my reading list is <a href="http://masoncurrey.com/Daily-Rituals">Daily Rituals</a> which looks very
interesting. One thing that seems clear, is that many productive people have developed a system and it&rsquo;s important to
discover my own.</p>

<h3>Summary</h3>

<p>I began reading the book before taking the course and immediately benefited from a process that is described in the
book. The book on its own is a fantastic resource and is an excellent compliment to the course. I really think taking the
course at the same time instilled a lot of the information far better than if I had only just read the book. I was
surprised when I finished the book because my Kindle reported that I was only 65% complete when I was at the end. Well
that&rsquo;s because the remainder is a massive collection of references of all the research that&rsquo;s been done on all of the
topics! It shows that the content is truly backed by science which is refreshing given all the anecdotal type of
information that&rsquo;s published on the Internet.</p>

<p>Reading the book and taking the course was very meta; as I learned techniques from the
book, I applied them to the course and vice versa. I get the feeling this is going to be a book that I read on a yearly
basis (spaced repetition) to continuously improve these concepts. This post could have been a lot longer, but I&rsquo;d rather
encourage you to read the book yourself and practice the exercises at the end of each chapter.</p>

<h4>Other Resources and References</h4>

<ul>
<li><a href="https://pragprog.com/book/ahptl/pragmatic-thinking-and-learning">Pragmatic Thinking and Learning</a> which is geared more towards software developers.</li>
<li><a href="http://www.healthyhacker.com/">HealthyHacker Podcast</a> which talks a lot about memorization techniques and developing positive habits.</li>
<li><a href="http://betterexplained.com/">Better Explained</a> Kalid Azad does an exceptional job of explaining things. In an interview in the
course he describes his method of ADEPT (analogy, diagram, example, plain English, technical).</li>
</ul>


<p>1 &ldquo;diffuse vs focused mode&rdquo; picture <a href="http://tdlc.ucsd.edu/educators/educators%5Fwebinar%5Foakley5%F031213.html">http://tdlc.ucsd.edu/educators/educators%5Fwebinar%5Foakley5%F031213.html</a><br />
2 &ldquo;chunking&rdquo; picture p.56 A Mind For Numbers, Barbara Oakley<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review - Learning Continuous Integration With TeamCity by Manoj Mahalingam]]></title>
    <link href="http://scottmuc.com/book-review-learning-continuous-integration-with-teamcity-by-manoj-mahalingam/"/>
    <updated>2014-10-13T17:34:30+05:30</updated>
    <id>http://scottmuc.com/book-review-learning-continuous-integration-with-teamcity-by-manoj-mahalingam</id>
    <content type="html"><![CDATA[<p><strong>Disclaimer</strong> &ndash; I personally know Manoj and have worked with him in the past. I was asked to review his book,
<a href="http://goo.gl/5wUy3v">Learning Continuous Integration with TeamCity</a>, by <a href="https://www.packtpub.com/">Packt Publishing</a>.</p>

<p><a href="http://goo.gl/5wUy3v"><img class="left" src="https://www.packtpub.com/sites/default/files/9518OT%5f0.jpg" width="200"></a>
As someone who had spent many years consulting around the benefits of CI and implementing build and release strategies,
I was interested in how the minutiae would be brought up in a book.</p>

<p>The book begins by going through the creation and configuration of a similar build process for 3 specific tech stacks:
Java, .Net, and Ruby. At first it feels rather repetitive but the repetition actually helps reinforce the importance of
consistency. With all tech stacks, the procedure is pretty much the same: <code>Checkout, Build, Test, Package, Deploy, Run
UI Tests</code>. This pattern really stands out after going through chapters 4, 5 and 6 and builds up a foundation for the
reader so that the rest of the material makes sense.</p>

<p>After setting the stage with these build configurations, he then dives into content that&rsquo;s a bit more TeamCity
specific. This area was much more interesting to me as I&rsquo;m already experienced with build and release concepts, but it
was nice to see TeamCity specific features explained in a little bit more depth.</p>

<p>One piece that felt a little out of place was the topic on Continuous Delivery. It&rsquo;s really hard to introduce a concept
that has a massive book dedicated to the subject. Not sure if its inclusion will help out the beginner that this book
appears to be targeting.</p>

<p>What I enjoyed the most was raising operational concerns around running a CI server system. It was likely
deliberately left out, but I would have liked to see a mention of automated configuration management. There&rsquo;s something
incredibly powerful around automation around your automation.</p>

<p>It became clear to me that this book is meant for the absolute beginner. Manoj hints at better ways of implementing
his example configurations (eg: using wrapper scripts over the built in runners) but doesn&rsquo;t distract the reader
with these possibly subjective tangents. I would recommend this book if you&rsquo;ve never worked with any CI tool and like
to have a guidebook as you try and set it up yourself. Despite being over 250 pages, the book is packed with
screenshots so that it&rsquo;s absolutely clear and won&rsquo;t take too long to go through the whole book. If you&rsquo;re already
experienced with some tools the principles around CI and good build hygiene, this book is useful to skim to see what&rsquo;s
new with TeamCity and some context of the usage of TeamCity specific features.</p>

<p>You can find more information about Manoj at his <a href="https://twitter.com/manojlds">twitter account</a>, on <a href="http://stackoverflow.com/users/526535/manojlds">stackoverflow</a>, or his
<a href="http://stacktoheap.com/">website</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review - the Art of Unit Testing by Roy Osherove]]></title>
    <link href="http://scottmuc.com/blog/reviews/book-review-the-art-of-unit-testing-by-roy-osherove/"/>
    <updated>2009-07-08T08:56:00+05:30</updated>
    <id>http://scottmuc.com/blog/reviews/book-review-the-art-of-unit-testing-by-roy-osherove</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://www.manning.com/osherove/osherove_cover150.jpg">http://www.manning.com/osherove/osherove_cover150.jpg</a>">
In a recent splurge I purchased 4 books from <a href="http://www.manning.com/">Manning Press</a> with one of them being <a href="http://www.manning.com/osherove/">The Art of Unit Testing</a> by <strong>Roy Osherove</strong>.</p>

<p>I would categorize myself as relatively new to unit testing. My first hands on testing was when I took the Nothing but .Net bootcamp with JP Boodhoo but he emphasized BDD style tests. I saw the benefit of BDD but didn&rsquo;t feel I had the know how to implement them properly. About 3 months ago I started writing tests in a more unit test like fashion and things started clicking.</p>

<p>This book felt like an Assertion of what I&rsquo;ve learned over the last year. As I read the book I kept finding stories I could relate to. In my attempts to apply unit testing to my own code, I experienced nearly everything Roy talks about in this book.</p>

<p><strong>Chapter 5</strong> was great a explaining the differences between the terms <a href="http://www.martinfowler.com/articles/mocksArentStubs.html">Stub and Mock</a>. What I liked was how he provided samples of manual stubs and mocks to give the reader a peak under the curtain as to what a mock (err faking, Roy&rsquo;s personal word preference) framework does for us. I can understand how the work mock is overloaded now, and can appreciate the proper terminology and it helps when explaining these concepts to others.</p>

<p>For me <strong>Chapters 6 and 7</strong> are where I got the most out of the book. Through all my reading of testing on-line, I found it quite simple because the scope of the demos were so small. I felt these two chapters armed me with some good principals on organizing tests and treating them just as important as my production code.</p>

<p>All in all this was one of the easiest programming books I&rsquo;ve ever read. Roy&rsquo;s tone was fun (especially his little jab at <a href="http://ayende.com/">Ayende</a>), but wasn&rsquo;t so opinionate that it sounded preachy. In fact I felt comfortable making my own opinions that extend his foundations. Roy presented the material in a way that seems like he assumes you&rsquo;re not an idiot. There wasn&rsquo;t a lot of &ldquo;hand holding&rdquo; which can be found in other entry level books. He provides ample resources for those that want more instruction on certain topics which creates a good pace for the reader.</p>

<p>As for the negatives: I wish it was a little longer. I don&rsquo;t know why, but I felt that there was more to say on a lot of topics. Perhaps more examples, which could seem a bit repatitive, but could be skipped by those who got the message. I also didn&rsquo;t like how <a href="http://typemock.com/">TypeMock</a> was being pushed heavily and the disclaimer that Roy worked for TypeMock didn&rsquo;t come in until near the end.</p>

<p>I would reccomend this book to anyone who is new to unit testing. I think I read the book at almost a perfect time. I knew enough that I could see past the trivial example to the message he&rsquo;s delivering, but not enough to skip all the material because it was so obvious. A seasoned unit tester might not get as much value from this book, but I would urge them to get it anyways so they can loan it to those they work with who are new to testing.</p>

<p>A great prelude to reading this book is to watch Roy review the test suites for the following projects:</p>

<p><a href="http://weblogs.asp.net/rosherove/archive/2009/03/20/test-review-1-nerddinner.aspx">Nerd Dinner</a> <br />
<a href="http://weblogs.asp.net/rosherove/archive/2009/03/21/test-review-2-asp-net-mvc-unit-tests.aspx">Asp.Net MVC</a> <br />
<a href="http://weblogs.asp.net/rosherove/archive/2009/03/23/test-review-3-unity.aspx">Microsoft Unity</a></p>

<p>Be warned, you&rsquo;ll be watching a grumpy Roy at 2am :&ndash;). Roy also has a <a href="http://osherove.com/blog">great blog</a> and is active on <a href="http://twitter.com/RoyOsherove">twitter</a> as well.</p>
]]></content>
  </entry>
  
</feed>
